{"ast":null,"code":"var _jsxFileName = \"/Users/Toby/Desktop/Hunter/Spring2019/WebDev/findspace/client/src/components/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n      key: post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, post.title)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Posts\"), postItems);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/Toby/Desktop/Hunter/Spring2019/WebDev/findspace/client/src/components/Posts.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Posts","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","postItems","map","post","id","title","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAGA,SAAS,CAACC,OAAb,EAAsB;AACpB,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,iBACzC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADgB,CAAlB;AAMA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGJ,SAFH,CADF;AAMD;;AAxB2B;;AA2B9BT,KAAK,CAACc,SAAN,GAAkB;AAChBf,EAAAA,UAAU,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEhBV,EAAAA,KAAK,EAAET,SAAS,CAACoB,KAAV,CAAgBD,UAFP;AAGhBX,EAAAA,OAAO,EAAER,SAAS,CAACqB;AAHH,CAAlB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYe,KADa;AAEhChB,EAAAA,OAAO,EAAEe,KAAK,CAACd,KAAN,CAAYgB;AAFW,CAAL,CAA7B;;AAKA,eAAexB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,KAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if(nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    } \n  }\n  \n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <p>{post.title}</p>\n      </div>\n    ))\n    \n    return (\n      <div>\n        <h1>Posts</h1>\n        {postItems}\n      </div>\n    )\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);"]},"metadata":{},"sourceType":"module"}