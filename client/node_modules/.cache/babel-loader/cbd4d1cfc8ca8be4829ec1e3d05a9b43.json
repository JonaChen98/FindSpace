{"ast":null,"code":"var _jsxFileName = \"/Users/Toby/Desktop/Hunter/Spring2019/WebDev/findspace/client/src/pages/Test.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport PropTypes from 'prop-types';\nimport Posts from '../components/Posts';\nimport PostForm from '../components/Postform'; // calling the connect wrapper and the function created in the actions section\n\nimport { connect } from 'react-redux';\nimport { testFunc } from '../actions/testActions';\n\nclass Test extends Component {\n  componentWillMount() {\n    this.props.testFunc();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, this.props.test), /*#__PURE__*/React.createElement(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Posts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nTest.propTypes = {\n  testFunc: PropTypes.func.isRequired,\n  test: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  test: state.test.test\n});\n\nexport default connect(mapStateToProps, {\n  testFunc\n})(Test);","map":{"version":3,"sources":["/Users/Toby/Desktop/Hunter/Spring2019/WebDev/findspace/client/src/pages/Test.js"],"names":["React","Component","PropTypes","Posts","PostForm","connect","testFunc","Test","componentWillMount","props","render","test","propTypes","func","isRequired","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAE3BO,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,QAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,IAAhB,CADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAUD;;AAjB0B;;AAoB7BJ,IAAI,CAACK,SAAL,GAAiB;AACfN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,IAAV,CAAeC,UADV;AAEfH,EAAAA,IAAI,EAAET,SAAS,CAACa,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWA;AADe,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,IAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n\nimport PropTypes from 'prop-types';\nimport Posts from '../components/Posts';\nimport PostForm from '../components/Postform';\n\n// calling the connect wrapper and the function created in the actions section\nimport { connect } from 'react-redux';\nimport { testFunc } from '../actions/testActions';\n\nclass Test extends Component {\n  \n  componentWillMount() {\n    this.props.testFunc();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>{this.props.test}</h1>\n          <PostForm />\n          <hr />\n          <Posts />\n        </header>\n      </div>\n    );\n  } \n}\n\nTest.propTypes = {\n  testFunc: PropTypes.func.isRequired,\n  test: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  test: state.test.test\n});\n\nexport default connect(mapStateToProps, { testFunc })(Test);"]},"metadata":{},"sourceType":"module"}